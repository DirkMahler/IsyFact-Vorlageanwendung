<!--
  #%L
  Terminfindung
  %%
  Copyright (C) 2015 - 2016 Bundesverwaltungsamt (BVA), msg systems ag
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:composite="http://java.sun.com/jsf/composite"
    xmlns:h="http://java.sun.com/jsf/html" xmlns:f="http://java.sun.com/jsf/core"
    xmlns:jsf="http://xmlns.jcp.org/jsf" xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:isyi="http://java.sun.com/jsf/composite/isyfact/internal">

<!-- Ein Button. Je nach JS-Status wird hier eine AJAX-Aktion oder ein Full-Page Reload durchgeführt. -->

<composite:interface>

	<!-- Die Referenz des Objekts. -->
    <composite:attribute name="reference" required="true" />
    <!-- Die auszuführende Aktion. -->
    <composite:attribute name="action" required="true" targets="ajax_button" />
    <!-- Die zu ergänzenden Style-Klassen. -->
    <composite:attribute name="styleClass" required="false" />
    <!-- Das Label des Buttons. -->
    <composite:attribute name="value" required="true" />
    <!-- Ob der Button deaktivert ist oder nicht. -->
    <composite:attribute name="disabled" type="Boolean" default="false" />
    <!-- zur aktuellen Druckansicht-Anzeige aus dem BasisModel. -->
    <composite:attribute name="showPrintView" type="Boolean" default="#{not empty basisModel and basisModel.showPrintView}" />
    <!-- Legt fest, ob die Komponente in gleicher Zeile gerendered werden soll -->
	<composite:attribute name="inLine" required="false" type="Boolean" default="false"/>     

    <!-- AJAX: Welches Form ausgeführt werden soll. -->
    <composite:attribute name="execute" required="false" default="@form" />
    <!-- AJAX: Welche Elemente gerendert werden sollen. -->
    <composite:attribute name="render" required="false" default="@form" />
    <!-- AJAX: Ob ein Klick die GUI blockieren soll bis das Ergebnis eingetroffen ist. -->
    <composite:attribute name="block" required="false" default="false" type="Boolean" />

	<!-- Ein spezifisches Validation-Model, falls benötigt. -->
    <composite:attribute name="validationModel" required="false" default="#{validationModel}" />
    <!-- Eine spezifische globale Konfiguration, falls notwendig. -->
    <composite:attribute name="globalConfig" required="false" default="#{globalConfigurationModel}" />

</composite:interface>

<composite:implementation>
    
    <!-- Buttons werden deaktiviert, sofern eine der Foglgenden Bedingungen zutrifft  -->
    <!-- 1) Das Attribut "disabled" ist true -->
    <!-- 2) Das Attribut "disabled" ist false und das Attribut "showPrintView" ist true -->
	<ui:param name="btnDisabled"
		value="#{(cc.attrs.showPrintView and not cc.attrs.disabled) || cc.attrs.disabled}" />
	<!-- Validierungsfehler bestimmen -->
	<ui:param name="validationMessages"
		value="#{cc.attrs.validationModel.getValidationMessagesForReference(cc.attrs.reference)}" />
	<ui:param name="existsValidationError"
		value="#{not empty validationMessages}" />

	<div class="form-group#{existsValidationError ? ' has-error has-feedback': ''}#{cc.attrs.inLine ? ' inLineBlockButton' : ''}">
				
	    <ui:fragment rendered="#{cc.attrs.globalConfig.jsEnabled}">
	        <h:commandButton id="ajax_button" styleClass="btn btn-default #{cc.attrs.styleClass}"
	            value="#{cc.attrs.value}" disabled="#{btnDisabled}">
	            <f:ajax execute="#{cc.attrs.execute}" render="#{cc.attrs.render}" onevent="#{cc.attrs.block ? 'blockUi' : ''}"/>
	        </h:commandButton>
	    </ui:fragment>   	
    	
    	<!-- Bei Validierungsfehlern -->
        <isyi:formValidationIcon validationModel="#{cc.attrs.validationModel}"
            reference="#{cc.attrs.reference}" inputGroupAddonExistent="false" />
            
    </div>

</composite:implementation>

</html>
